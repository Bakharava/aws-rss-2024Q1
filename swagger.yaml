openapi: 3.0.3
info:
  title: Swagger Products store - OpenAPI 3.0
  description: This is products lambda API
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

servers:
  - url: https://dd84tfs562.execute-api.eu-west-1.amazonaws.com/prod/
tags:
  - name: product
    description: Everything about your Products
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /products:
    get:
      tags:
        - product
      summary: Find all products
      description: Returns a collection of products
      operationId: getProducts
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: Products not found
  /products/{productId}:
    get:
      tags:
        - product
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
components:
  schemas:
    Product:
      required:
        - name
        - photoUrls
      type: object
      properties:
        description:
          type: string
          example: Test product
        id:
          type: string
          example: 7567ec4b-b10c-48c5-9345-fc73c48a80a3
        title:
          type: string
          example: Product Name
        price:
          type: integer
          format: int64
          example: 10
      xml:
        name: product